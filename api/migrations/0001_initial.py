# Generated by Django 5.1.6 on 2025-06-11 14:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ci', models.CharField(default='00000000000', max_length=11, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=50)),
                ('sex', models.CharField(choices=[('None', 'None'), ('Female', 'Female'), ('Male', 'Male')])),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=4, unique=True)),
                ('speciality', models.CharField(max_length=50)),
                ('Scholarship', models.CharField(max_length=50)),
                ('company', models.CharField(blank=True, max_length=50, null=True)),
                ('dependence', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('tcp_category', models.CharField(blank=True, choices=[('PortiadorPrivado', 'PortiadorPrivado'), ('Cochero', 'Cochero'), ('Bicitaxis', 'Bicitaxis')], null=True)),
                ('ocupational_category', models.CharField(blank=True, choices=[('Management', 'Management'), ('Technical', 'Technical'), ('Administrative', 'Administrative'), ('Service', 'Service'), ('Worker', 'Worker'), ('ProfesionalDriver', 'ProfesionalDriver')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contract', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=250)),
                ('authorizedPerson', models.CharField(blank=True, max_length=200, null=True)),
                ('dateContractStart', models.DateField()),
                ('dateContractFinish', models.DateField()),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250)),
                ('paymentCode', models.CharField(max_length=100)),
                ('priceToPay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rank', models.IntegerField()),
                ('bookingCode', models.CharField(max_length=100)),
                ('dependencyCourseId', models.CharField(max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Dutiesrigths',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_duty', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('full_name', models.CharField(default='Nombre Completo', max_length=100)),
                ('rol', models.CharField(choices=[('admin', 'admin'), ('gestor', 'gestor'), ('comercial', 'comercial'), ('observador', 'observador'), ('cajero', 'cajero')], default='observador', max_length=20)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActionTraces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('row_id', models.IntegerField()),
                ('registered_at', models.DateTimeField()),
                ('action', models.CharField(max_length=100)),
                ('changes', models.JSONField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Traza',
                'verbose_name_plural': 'Trazas',
                'ordering': ['-registered_at'],
            },
        ),
        migrations.CreateModel(
            name='MultipleBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('is_confirmed', models.BooleanField(default=False)),
                ('is_history', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiplebookings', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
                ('is_available', models.BooleanField(default=True)),
                ('address', models.CharField(max_length=100)),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to='api.municipality')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('date_start_course', models.DateTimeField()),
                ('date_end_course', models.DateTimeField()),
                ('date_start_offer', models.DateTimeField()),
                ('date_end_offer', models.DateTimeField()),
                ('priceToPay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offers', to='api.classroom')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offers', to='api.company')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offers', to='api.course')),
            ],
            options={
                'verbose_name': 'Oferta',
                'verbose_name_plural': 'Ofertas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ClientClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduleOfferDate', models.CharField()),
                ('evaluation', models.IntegerField(null=True)),
                ('is_graduated', models.BooleanField(default=False)),
                ('graduatedDate', models.DateTimeField()),
                ('bookingCode', models.CharField(null=True)),
                ('tome', models.CharField(null=True)),
                ('folio', models.CharField(null=True)),
                ('assistenceClient', models.JSONField(blank=True)),
                ('evaluationConfirmed', models.BooleanField(default=False)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('registryNumber', models.IntegerField(blank=True, null=True)),
                ('documentRegistry', models.CharField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.offer')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priceToPay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('isBookingReserve', models.BooleanField(default=True)),
                ('typePayment', models.CharField(choices=[('Cash', 'Cash'), ('Online', 'Online'), ('Check', 'Check')], default='Check')),
                ('scheduleOfferDate', models.DateTimeField()),
                ('registeredDate', models.DateTimeField()),
                ('expirationDate', models.DateTimeField()),
                ('ordenGeneratedDate', models.DateTimeField()),
                ('paidDate', models.DateTimeField(blank=True, null=True)),
                ('isHistory', models.BooleanField(default=False)),
                ('isPaid', models.BooleanField(default=False)),
                ('transactionCode', models.CharField(max_length=100)),
                ('versatCode', models.CharField(max_length=100)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='api.classroom')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='api.client')),
                ('multipleBooking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='api.multiplebooking')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='api.offer')),
            ],
        ),
        migrations.CreateModel(
            name='OfferAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('availability', models.IntegerField(default=0)),
                ('group_code', models.CharField(max_length=10)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.offer')),
            ],
            options={
                'verbose_name': 'Disponibilidad',
                'verbose_name_plural': 'Disponibilidades',
            },
        ),
        migrations.AddField(
            model_name='municipality',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='municipalities', to='api.province'),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('providerNumber', models.IntegerField()),
                ('paymentCode', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=250)),
                ('date', models.DateTimeField()),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='api.municipality')),
            ],
            options={
                'verbose_name': 'Escuela',
                'verbose_name_plural': 'Escuelas',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companys', to='api.school'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to='api.school'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.school'),
        ),
        migrations.AddField(
            model_name='course',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='api.service'),
        ),
    ]
